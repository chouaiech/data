import language from './selector-languages.json';

const dcatapProperties = {
  datasets: {
    datasetID: {
      identifier: 'datasetID',
      type: 'unique-identifier-input',
      name: 'datasetID',
      class: 'property',
      '@change': true,
    },
    description: {
      identifier: 'description',
      type: 'group',
      name: 'dct:description',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true,
      minimum: 1,
      children: [
        {
          identifier: 'description',
          type: 'textarea',
          name: '@value',
          validation: 'required',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          options: language,
          validation: 'required',
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    title: {
      identifier: 'title',
      type: 'group',
      name: 'dct:title',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true, 	
      minimum: 1,
      children: [
        {
          identifier: 'title',
          type: 'textarea',
          name: '@value',
          validation: 'required',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          validation: 'required',
          options: language,
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    contactPoint: {
      identifier: 'contactPoint',
      type: 'group',
      name: 'dcat:contactPoint',
      class: 'property',
      '@repeatableRemoved': true,
      repeatable: true,
      children: [
        {
          identifier: 'contactPointType',
          type: 'select',
          name: '@type',
          options: {
            'vcard:Individual': 'Person',
            'vcard:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'contactPointName',
          type: 'text',
          name: 'vcard:fn',
          '@change': true,
        },
        {
          identifier: 'contactPointEmail',
          type: 'email',
          name: 'vcard:hasEmail',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'contactPointAddress',
          type: 'group',
          name: 'vcard:hasAddress',
          children: [
            {
              identifier: 'contactPointAddressStreet',
              type: 'text',
              name: 'vcard:street_address',
              '@change': true,
            },
            {
              identifier: 'contactPointAddressPostcode',
              type: 'text',
              name: 'vcard:postal_code',
              '@change': true,
            },
            {
              identifier: 'contactPointAddressCity',
              type: 'text',
              name: 'vcard:locality',
              '@change': true,
            },
            {
              identifier: 'contactPointAddressCountry',
              type: 'text',
              name: 'vcard:country_name',
              '@change': true,
            },
          ],
        },
        {
          identifier: 'contactPointTelephone',
          type: 'tel',
          name: 'vcard:hasTelephone',
          '@change': true,
        },
        {
          identifier: 'contactPointUrl',
          type: 'url',
          name: 'vcard:hasURL',
          validation: 'optional|url',
          '@change': true,
        },
        {
          identifier: 'contactPointOrganisationName',
          type: 'text',
          name: 'vcard:hasOrganizationName',
          '@change': true,
        },
      ],
    },
    subject: {
      identifier: 'subject',
      type: 'autocomplete-input',
      name: 'dct:subject',
      class: 'property',
      voc: 'eurovoc',
      multiple: true,
      '@change': true,
    },
    keyword: {
      identifier: 'keyword',
      type: 'group',
      name: 'dcat:keyword',
      class: 'property grid2r2c',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'keyword',
          type: 'text',
          name: '@value',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          name: '@language',
          class: 'row1 column2',
          options: language,
          '@change': true,
        },
      ],
    },
    publisher: {
      identifier: 'publisher',
      name: 'dct:publisher',
      class: 'property',
      type: 'autocomplete-input',
      voc: 'corporate-body',
      '@change': true,
    },
    spatial: {
      identifier: 'spatial',
      type: 'conditional-input',
      name: 'dct:spatial',
      class: 'property',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true, 
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'spatial',
            type: 'conditional-input',
            name: 'dct:spatial',
            options: {
              continent: 'Continent',
              country: 'Country',
              place: 'Place',
            },
            '@change': true,
            data: {
              continent: [
                {
                  identifier: 'spatialContinent',
                  type: 'autocomplete-input',
                  voc: 'continent',
                  name: '@id',
                  '@change': true,
                },
              ],
              country: [
                {
                  identifier: 'spatialCountry',
                  type: 'autocomplete-input',
                  voc: 'country',
                  name: '@id',
                  '@change': true,
                },
              ],
              place: [
                {
                  identifier: 'spatialPlace',
                  type: 'autocomplete-input',
                  voc: 'place',
                  name: '@id',
                  '@change': true,
                },
              ],
            },
          },
        ],
        man: [
          {
            identifier: 'spatial',
            type: 'url',
            name: '@id',
            validation: 'optional|url',
            '@change': true,
          },
        ],
      },
    },
    temporal: {
      type: 'group',
      name: 'dct:temporal',
      identifier: 'temporal',
      class: 'property besides',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'temporalStart',
          type: 'date-picker',
          name: 'dcat:startDate',
          '@change': true,
        },
        {
          identifier: 'temporalEnd',
          type: 'date-picker',
          name: 'dcat:endDate',
          '@change': true,
        },
      ],
    },
    theme: {
      identifier: 'theme',
      type: 'autocomplete-input',
      multiple: true,
      voc: 'data-theme',
      name: 'dcat:theme',
      class: 'property',
      '@change': true,
    },
    accessRights: {
      identifier: 'accessRights',
      type: 'autocomplete-input',
      voc: 'access-right',
      name: 'dct:accessRights',
      class: 'property',
      '@change': true,
    },
    creator: {
      identifier: 'creator',
      type: 'group',
      name: 'dct:creator',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'creatorType',
          type: 'select',
          name: '@type',
          options: {
            'foaf:Person': 'Person',
            'foaf:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'creatorName',
          type: 'text',
          name: 'foaf:name',
          '@change': true,
        },
        {
          identifier: 'creatorEmail',
          type: 'email',
          name: 'foaf:mbox',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'creatorHomepage',
          type: 'url',
          name: 'foaf:homepage',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    conformsTo: {
      identifier: 'conformsTo',
      type: 'group',
      name: 'dct:conformsTo',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'conformsToTitle',
          type: 'text',
          name: 'rdfs:label',
          '@change': true,
        },
        {
          identifier: 'conformsToUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    page: {
      identifier: 'page',
      type: 'group',
      name: 'foaf:page',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'pageTitle',
          type: 'text',
          name: 'dct:title',
          '@change': true,
        },
        {
          identifier: 'pageDescription',
          type: 'textarea',
          name: 'dct:description',
          '@change': true,
        },
        {
          identifier: 'pageFormat',
          type: 'autocomplete-input',
          voc: 'file-type',
          name: 'dct:format',
          '@change': true,
        },
        {
          identifier: 'pageUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    accrualPeriodicity: {
      identifier: 'accrualPeriodicity',
      type: 'autocomplete-input',
      voc: 'frequency',
      name: 'dct:accrualPeriodicity',
      class: 'property',
      '@change': true,

    },
    hasVersion: {
      type: 'group',
      identifier: 'hasVersion',
      name: 'dct:hasVersion',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'hasVersionUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    isVersionOf: {
      type: 'group',
      identifier: 'isVersionOf',
      name: 'dct:isVersionOf',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'isVersionOfUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    source: {
      type: 'group',
      repeatable: true,
      '@repeatableRemoved': true, 
      identifier: 'source',
      name: 'dct:source',
      class: 'property',
      children: [
        {
          name: '@id',
          identifier: 'sourceUrl',
          type: 'url',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    identifier: {
      type: 'group',
      class: 'property',
      name: 'dct:identifier',
      identifier: 'identifier',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'identifier',
          name: '@value',
          type: 'text',
          '@change': true,
        },
      ],
    },
    isReferencedBy: {
      type: 'group',
      identifier: 'isReferencedBy',
      name: 'dct:isReferencedBy',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'isReferencedByUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    landingPage: {
      type: 'group',
      identifier: 'landingPage',
      name: 'dcat:landingPage',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'landingPageUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    language: {
      identifier: 'language',
      type: 'autocomplete-input',
      name: 'dct:language',
      class: 'property',
      multiple: true,
      voc: 'language',
      '@change': true,
    },
    admsIdentifier: {
      type: 'group',
      class: 'property',
      name: 'adms:identifier',
      identifier: 'admsIdentifier',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'admsIdentifierUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
        {
          identifier: 'admsIdentifierSkosNotation',
          type: 'group',
          name: 'skos:notation',
          children: [
            {
              identifier: 'admsIdentifierValue',
              type: 'text',
              name: '@value',
              '@change': true,
            },
            {
              identifier: 'admsIdentifierType',
              type: 'autocomplete-input',
              voc: 'notation-type',
              name: '@type',
              '@change': true,
            },
          ],
        },
      ],
    },
    provenance: {
      type: 'group',
      identifier: 'provenance',
      name: 'dct:provenance',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'provenance',
          type: 'text',
          name: 'rdfs:label',
          '@change': true,
        },
      ],
    },
    qualifiedAttribution: {
      type: 'group',
      identifier: 'qualifiedAttribution',
      name: 'prov:qualifiedAttribution',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'qualifiedAttributionUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    wasGeneratedBy: {
      type: 'group',
      identifier: 'wasGeneratedBy',
      name: 'prov:wasGeneratedBy',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'wasGeneratedByUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    qualifiedRelation: {
      type: 'group',
      identifier: 'qualifiedRelation',
      name: 'dcat:qualifiedRelation',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'qualifiedRelationUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    relation: {
      type: 'group',
      identifier: 'relation',
      name: 'dct:relation',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'relationUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    issued: {
      identifier: 'issued',
      name: 'dct:issued',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'date-picker',
            '@change': true,
          },
        ],
      },
    },
    modified: {
      identifier: 'modified',
      name: 'dct:modified',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'date-picker',
            '@change': true,
          },
        ],
      },
    },
    spatialResolutionInMeters: {
      identifier: 'spatialResolutionInMeters',
      type: 'number',
      name: 'dcat:spatialResolutionInMeters',
      class: 'property',
      validation: 'number',
      '@change': true,
    },
    temporalResolution: {
      identifier: 'temporalResolution',
      type: 'group',
      name: 'dcat:temporalResolution',
      class: 'property',
      '@change': true,
      children: [
        {
          identifier: 'temporalResolutionYear',
          type: 'number',
          min: 0,
          '@change': true,
          name: 'Year',
        },
        {
          identifier: 'temporalResolutionMonth',
          type: 'number',
          min: 0,
          max: 12,
          '@change': true,
          name: 'Month',
        },
        {
          identifier: 'temporalResolutionDay',
          type: 'number',
          min: 0,
          max: 31,
          '@change': true,
          name: 'Day',
        },
        {
          identifier: 'temporalResolutionHour',
          type: 'number',
          min: 0,
          max: 23,
          '@change': true,
          name: 'Hour',
        },
        {
          identifier: 'temporalResolutionMinute',
          type: 'number',
          min: 0,
          max: 59,
          '@change': true,
          name: 'Minute',
        },
        {
          identifier: 'temporalResolutionSecond',
          type: 'number',
          min: 0,
          max: 59,
          '@change': true,
          name: 'Second',
        },
      ],
    },
    type: {
      identifier: 'type',
      type: 'autocomplete-input',
      voc: 'dataset-type',
      name: 'dct:type',
      class: 'property',
      multiple: true,
      '@change': true,
    },
    versionInfo: {
      identifier: 'versionInfo',
      type: 'text',
      name: 'owl:versionInfo',
      class: 'property',
      '@change': true,
    },
    versionNotes: {
      identifier: 'versionNotes',
      type: 'group',
      name: 'adms:versionNotes',
      class: 'property besides',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'versionNotes',
          type: 'textarea',
          name: '@value',
          class: 'main',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          name: '@language',
          options: language,
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    catalog: {
      identifier: 'catalog',
      type: 'select',
      name: 'dct:catalog',
      class: 'property',
      validation: 'required',
      options: {},
      '@change': true,
    },
    isUsedBy: {
      type: 'group',
      identifier: 'isUsedBy',
      name: 'dext:metadataExtension',
      class: 'property',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          type: 'url',
          identifier: 'isUsedBy',
          validation: 'optional|url',
          '@change': true,
          name: 'dext:isUsedBy',
        },
      ],
    },
  },
  distributions: {
    accessURL: {
      identifier: 'accessUrl',
      name: 'dcat:accessURL',
      type: 'group',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true, 
      validation: 'required',
      minimum: 1,
      class: 'property',
      children: [
        {
          identifier: 'accessUrl',
          name: '@id',
          type: 'conditional-input',
          '@change': true,
          options: { url: 'Provide an URL', file: 'Upload a file' },
          data: {
            url: [
              {
                type: 'url',
                identifier: 'accessUrl',
                name: '@id',
                '@change': true,
                validation: 'required|url',
              },
            ],
            file: [
              {
                type: 'fileupload',
                identifier: 'accessUrl',
                name: '@id',
                '@change': true,
                validation: 'required',
              },
            ],
          },
        },
      ],
    },
    availability: {
      identifier: 'availability',
      type: 'autocomplete-input',
      voc: 'planned-availability',
      name: 'dcat:availability',
      class: 'property',
      '@change': true,
    },
    description: {
      identifier: 'description',
      type: 'group',
      name: 'dct:description',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true, 
      minimum: 1,
      children: [
        {
          identifier: 'description',
          type: 'textarea',
          name: '@value',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          options: language,
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    format: {
      identifier: 'format',
      type: 'autocomplete-input',
      class: 'property',
      voc: 'file-type',
      name: 'dct:format',
      '@change': true,
    },
    licence: {
      identifier: 'licence',
      type: 'conditional-input',
      name: 'dct:license',
      '@change': true,
      class: 'property',
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'licence',
            type: 'autocomplete-input',
            voc: 'licence',
            name: '@id',
            '@change': true,
          },
        ],
        man: [
          {
            type: 'group',
            name: 'dct:license',
            '@change': true,
            children: [
              {
                identifier: 'licenceTitle',
                type: 'text',
                name: 'dct:title',
                '@change': true,
              },
              {
                identifier: 'licenceDescription',
                type: 'textarea',
                name: 'skos:prefLabel',
                '@change': true,
              },
              {
                identifier: 'licenceURL',
                type: 'url',
                name: 'skos:exactMatch',
                validation: 'optional|url',
                '@change': true,
              },
            ],
          },
        ],
      },
    },
    title: {
      identifier: 'title',
      type: 'group',
      name: 'dct:title',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true, 
      minimum: 1,
      children: [
        {
          identifier: 'title',
          type: 'text',
          name: '@value',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          options: language,
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    mediaType: {
      identifier: 'mediaType',
      type: 'autocomplete-input',
      voc: 'iana-media-types',
      name: 'dcat:mediaType',
      class: 'property',
      '@change': true,
    },
    downloadUrl: {
      type: 'group',
      identifier: 'downloadUrl',
      repeatable: true,
      name: 'dcat:downloadURL',
      '@repeatableRemoved': true,
      class: 'property',
      children: [
        {
          identifier: 'downloadUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    accessService: {
      identifier: 'accessService',
      type: 'group',
      name: 'dcat:accessService',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'accessServiceTitle',
          type: 'group',
          name: 'dct:title',
          class: 'property besides',
          '@change': true,
          repeatable: true,
          '@repeatableRemoved': true, 
          children: [
            {
              identifier: 'title',
              type: 'text',
              name: '@value',
              class: 'main',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'en',
              type: 'select',
              name: '@language',
              class: 'sub',
              options: language,
              '@change': true,
            },
          ],
        },
        {
          identifier: 'accessServiceDescription',
          type: 'group',
          name: 'dct:description',
          class: 'property besides',
          '@change': true,
          repeatable: true,
          '@repeatableRemoved': true, 
          children: [
            {
              identifier: 'description',
              type: 'textarea',
              name: '@value',
              class: 'main',
              '@change': true,
            },
            {
              identifier: 'language',
              value: 'en',
              type: 'select',
              name: '@language',
              class: 'sub',
              options: language,
              '@change': true,
            },
          ],
        },
        {
          identifier: 'accessServiceEndpointURL',
          type: 'url',
          name: 'dcat:endpointURL',
          class: 'main',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    byteSize: {
      identifier: 'byteSize',
      type: 'text',
      name: 'dcat:byteSize',
      class: 'property',
      '@change': true,
    },
    checksum: {
      type: 'group',
      identifier: 'checksum',
      name: 'spdx:checksum',
      class: 'property',
      children: [
        {
          identifier: 'checksum',
          type: 'text',
          name: 'spdx:checksumValue',
          '@change': true,
        },
        {
          identifier: 'checksumAlgorithm',
          type: 'autocomplete-input',
          voc: 'spdx-checksum-algorithm',
          name: 'spdx:algorithm',
          '@change': true,
        },
      ],
    },
    compressFormat: {
      identifier: 'compressFormat',
      type: 'autocomplete-input',
      voc: 'iana-media-types',
      name: 'dcat:compressFormat',
      class: 'property',
      '@change': true,
    },
    packageFormat: {
      identifier: 'packageFormat',
      type: 'autocomplete-input',
      voc: 'iana-media-types',
      name: 'dcat:packageFormat',
      class: 'property',
      '@change': true,
    },
    page: {
      identifier: 'page',
      type: 'group',
      name: 'foaf:page',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'pageTitle',
          type: 'text',
          name: 'dct:title',
          '@change': true,
        },
        {
          identifier: 'pageDescription',
          type: 'textarea',
          name: 'dct:description',
          '@change': true,
        },
        {
          identifier: 'pageFormat',
          type: 'autocomplete-input',
          voc: 'file-type',
          name: 'dct:format',
          '@change': true,
        },
        {
          identifier: 'pageUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    hasPolicy: {
      identifier: 'hasPolicy',
      type: 'group',
      class: 'property',
      name: 'odrl:hasPolicy',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'hasPolicyUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    language: {
      identifier: 'language',
      type: 'autocomplete-input',
      multiple: true,
      name: 'dct:language',
      voc: 'language',
      class: 'property',
      '@change': true,
    },
    conformsTo: {
      identifier: 'conformsTo',
      type: 'group',
      name: 'dct:conformsTo',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'conformsToTitle',
          type: 'text',
          name: 'rdfs:label',
          class: 'main',
          '@change': true,
        },
        {
          identifier: 'conformsToUrl',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    issued: {
      identifier: 'issued',
      name: 'dct:issued',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'date-picker',
            '@change': true,
          },
        ],
      },
    },
    modified: {
      identifier: 'modified',
      name: 'dct:modified',
      class: 'property',
      type: 'conditional-input',
      '@change': true,
      options: { date: 'Date', datetime: 'Date and Time' },
      data: {
        date: [
          {
            name: '@value',
            identifier: 'date',
            type: 'date',
            '@change': true,
          },
        ],
        datetime: [
          {
            name: '@value',
            identifier: 'datetime',
            type: 'date-picker',
            '@change': true,
          },
        ],
      },
    },
    rights: {
      identifier: 'rights',
      type: 'conditional-input',
      name: 'dct:rights',
      class: 'property',
      '@change': true,
      options: { url: 'URL', str: 'String' },
      data: {
        url: [
          {
            name: 'rdfs:label',
            identifier: 'url',
            type: 'url',
            '@change': true,
            validation: 'optional|url'
          }
        ],
        str: [
          {
            name: 'rdfs:label',
            identifier: 'str',
            type: 'text',
            '@change': true,
            validation: 'optional'
          }
        ]
      }
    },
    spatialResolutionInMeters: {
      identifier: 'spatialResolutionInMeters',
      type: 'number',
      name: 'dcat:spatialResolutionInMeters',
      class: 'property',
      validation: 'number',
      '@change': true,
    },
    temporalResolution: {
      identifier: 'temporalResolution',
      type: 'group',
      name: 'dcat:temporalResolution',
      class: 'property',
      '@change': true,
      children: [
        {
          identifier: 'temporalResolutionYear',
          type: 'number',
          min: 0,
          '@change': true,
          name: 'Year',
        },
        {
          identifier: 'temporalResolutionMonth',
          type: 'number',
          min: 0,
          max: 12,
          '@change': true,
          name: 'Month',
        },
        {
          identifier: 'temporalResolutionDay',
          type: 'number',
          min: 0,
          max: 31,
          '@change': true,
          name: 'Day',
        },
        {
          identifier: 'temporalResolutionHour',
          type: 'number',
          min: 0,
          max: 23,
          '@change': true,
          name: 'Hour',
        },
        {
          identifier: 'temporalResolutionMinute',
          type: 'number',
          min: 0,
          max: 59,
          '@change': true,
          name: 'Minute',
        },
        {
          identifier: 'temporalResolutionSecond',
          type: 'number',
          min: 0,
          max: 59,
          '@change': true,
          name: 'Second',
        },
      ],
    },
    type: {
      identifier: 'type',
      type: 'autocomplete-input',
      voc: 'distribution-type',
      name: 'dct:type',
      class: 'property',
      '@change': true,
    },
    status: {
      identifier: 'status',
      type: 'autocomplete-input',
      voc: 'dataset-status',
      name: 'adms:status',
      class: 'property',
      '@change': true,
    },
  },
  catalogues: {
    title: {
      identifier: 'title',
      type: 'group',
      name: 'dct:title',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true, 
      minimum: 1,
      children: [
        {
          identifier: 'title',
          type: 'text',
          name: '@value',
          validation: 'required',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          validation: 'required',
          options: language,
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    description: {
      identifier: 'description',
      type: 'group',
      name: 'dct:description',
      class: 'property grid1r2c',
      repeatable: true,
      '@repeatableRemoved': true, 
      minimum: 1,
      children: [
        {
          identifier: 'description',
          type: 'textarea',
          name: '@value',
          validation: 'required',
          class: 'row1 column1',
          '@change': true,
        },
        {
          identifier: 'language',
          value: 'en',
          type: 'select',
          options: language,
          validation: 'required',
          name: '@language',
          class: 'row1 column2',
          '@change': true,
        },
      ],
    },
    publisher: {
      identifier: 'publisher',
      name: 'dct:publisher',
      class: 'property',
      type: 'autocomplete-input',
      voc: 'corporate-body',
      '@change': true,
    },
    language: {
      identifier: 'language',
      type: 'autocomplete-input',
      voc: 'language',
      multiple: true,
      name: 'dct:language',
      class: 'property',
      '@change': true,
    },
    licence: {
      identifier: 'licence',
      type: 'conditional-input',
      name: 'dct:license',
      class: 'property',
      '@change': true,
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'licence',
            type: 'autocomplete-input',
            voc: 'licence',
            name: '@id',
            class: 'main',
            '@change': true,
          },
        ],
        man: [
          {
            identifier: 'licence',
            type: 'group',
            name: 'dct:license',
            '@change': true,
            children: [
              {
                identifier: 'licenceTitle',
                type: 'text',
                name: 'dct:title',
                class: 'main',
                '@change': true,
              },
              {
                identifier: 'licenceDescription',
                type: 'text',
                name: 'dct:description',
                class: 'main',
                '@change': true,
              },
              {
                identifier: 'licenceURL',
                type: 'url',
                name: 'foaf:homepage',
                class: 'main',
                validation: 'optional|url',
                '@change': true,
              },
            ],
          },
        ],
      },
    },
    spatial: {
      identifier: 'spatial',
      type: 'conditional-input',
      name: 'dct:spatial',
      class: 'property',
      '@change': true,
      repeatable: true,
      '@repeatableRemoved': true, 
      options: {
        voc: 'Choose from vocabulary',
        man: 'Manually submit information',
      },
      data: {
        voc: [
          {
            identifier: 'spatialContinent',
            type: 'autocomplete-input',
            voc: 'continent',
            name: '@id',
            class: 'main',
            '@change': true,
          },
          {
            identifier: 'spatialCountry',
            type: 'autocomplete-input',
            voc: 'country',
            name: '@id',
            class: 'main',
            '@change': true,
          },
          {
            identifier: 'spatialPlace',
            type: 'autocomplete-input',
            voc: 'place',
            name: '@id',
            class: 'main',
            '@change': true,
          },
        ],
        man: [
          {
            identifier: 'spatial',
            type: 'url',
            name: '@id',
            class: 'main',
            validation: 'optional|url',
            '@change': true,
          },
        ],
      },
    },
    homepage: {
      identifier: 'homepage',
      type: 'url',
      name: 'foaf:homepage',
      class: 'property',
      validation: 'optional|url',
      '@change': true,
    },
    hasPart: {
      type: 'group',
      identifier: 'hasPart',
      name: 'dct:hasPart',
      class: 'property',
      repeatable: true,
      '@repeatableRemoved': true, 
      children: [
        {
          identifier: 'hasPartURL',
          type: 'url',
          name: '@id',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
    isPartOf: {
      identifier: 'isPartOf',
      type: 'url',
      name: 'dct:isPartOf',
      class: 'property',
      validation: 'optional|url',
      '@change': true,
    },
    rights: {
      identifier: 'rights',
      type: 'conditional-input',
      name: 'dct:rights',
      class: 'property',
      '@change': true,
      options: { url: 'URL', str: 'String' },
      data: {
        url: [
          {
            name: 'rdfs:label',
            identifier: 'url',
            type: 'url',
            '@change': true,
            validation: 'optional|url'
          }
        ],
        str: [
          {
            name: 'rdfs:label',
            identifier: 'str',
            type: 'text',
            '@change': true,
            validation: 'optional'
          }
        ]
      }
    },
    catalog: {
      type: 'group',
      repeatabale: true,
      identifier: 'catalog',
      name: 'dcat:Catalog',
      class: 'property',
      children: [
        {
          identifier: 'catalogURL',
          type: 'url',
          validation: 'optional|url',
          '@change': true,
          name: '@value',
        },
      ],
    },
    creator: {
      identifier: 'creator',
      type: 'group',
      name: 'dct:creator',
      repeatable: true,
      '@repeatableRemoved': true, 
      class: 'property',
      children: [
        {
          identifier: 'creatorType',
          type: 'select',
          name: '@type',
          class: 'main',
          options: {
            'foaf:Person': 'Person',
            'foaf:Organization': 'Organization',
          },
          '@change': true,
        },
        {
          identifier: 'creatorName',
          type: 'text',
          name: 'foaf:name',
          class: 'main',
          '@change': true,
        },
        {
          identifier: 'creatorEmail',
          type: 'email',
          name: 'foaf:mbox',
          class: 'main',
          validation: 'optional|email',
          '@change': true,
        },
        {
          identifier: 'creatorHomepage',
          type: 'url',
          name: 'foaf:homepage',
          class: 'main',
          validation: 'optional|url',
          '@change': true,
        },
      ],
    },
  },
};

export default dcatapProperties;
